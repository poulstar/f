دکمه های ترکیبی ابتدایی برای کار راحت تر با اندروید استودیو:
ctrl + shift + '-' برای کالپس کردن همه آکولادها.
ctrl + shift + '+' برای باز کردن همه کدها.
ctrl + alt + '-' برای کالپس کردن یک بخش از کد که داخلش هستیم.
ctrl + alt + '+' برای باز کردن یک بخش از کد که داخلش هستیم.
البته از قسمت key bining هم میشه هر چیزی رو که میخوایم تغییر بدیم. اما ثابت نمینویسم اینجا. چون توی هر ورژنی فرق داره. همونجا سرچ کنم اگه لازم شد و هر
کسی از بچه ها هم لازم داشت با سرچ قسمت key binding رو توی android studio پیدا کنه.

کدها رو کالپس کنیم و کلاس های MyHomePage رو پاک کنیم و کلاس stateless MyHomePage خودمون رو درست کنیم. بعد از ساختن به بچه ها بگم که پاک کنن
و با نوشتن stl یه دونه جدید درست کنن و از این به بعد این طوری بسازن.
خب حالا که داریمش، اول ویجت Center رو بگم و باهاش یه ویجت Text بسازم و Hello World رو بنویسیم. دو تا ویجت تا حالا یاد گرفتیم.
اما خیلی زشت مینویسه و از تم استفاده نمیکنه. اینجا هست که ویجت Scaffold رو معرفی میکنیم که ساختار متریال دیزاینی داره. و برای گذاشتنش داخل Scaffold،
استفاده از کلید ترکیبی alt+enter رو معرفی کنیم. یه کم ممکنه طول بکشه رو سیستم های ضعیف تر.
بعد از این میخوایم بریم سراغ row و column. گرید سیستم رو معرفی کنم که داخل اکثر چیدمان ها امروزه استفاده میشه و ردیف و ستون رو بگم و main axis و 
cross axis رو هم برای هر کودوم توضیح بدم. بعد از توضیح بریم که برنامه رو بسازیم.
ویجت اسکافلد، یک named parameter به اسم appBar میگیره که مقداری که باید بهش بدیم، خودش ویجت هست. یه ویجت AppBar بهش میدیم که این ویجت، named parameter
title رو میخواد. مقدار اون باز یه ویجت هست که ویجت Text رو بهش میدیم. کانستراکتور Text دیگه String رو قبول میکنه. اما کلیتش رو به بچه ها بگم که اکثر
ویجت ها همین شکلی اند و داخل هم تعریف میشن.
چیزهایی که از appBar گفته میشه:
title, actions که داخل اکشنز، Icon ها رو هم توضیح میدیم. Icons و CupertinoIcons. دو تا آیکون که بذاریم بچه ها نمیتونن آیکون ها رو ببینن.
اینجا بهشون بگم که دیباگ بنر رو چه طوری غیر فعال کنن. حالا فاصله هاشون نزدیک هست و ویجت SizedBox رو معرفی کنم.
برای فاصله راست هم میشه دوباره سایزد باکس گذاشت. اما ویجت Padding رو هم معرفی کنم. داخلش all هست. only و بقیه رو هم بسته به سطح کلاس معرفی کنیم.
بعد بگم هر کودوم که خودشون دوست دارن اینجا میتونن استفاده کنن. برای ریفرمت کردن نوشته ها هم میتونن دکمه های ترکیبی ctrl + alt + l رو بزنن.
برای خود body از اسکافلد، ویجت column رو استفاده میکنیم که children میگیره به جای child. داخل خود ستونمون، ردیف داریم و ویجت Row رو میذاریم که اون هم
children میگیره. برای این کار، لازم نیست خودمون دستی بنویسیم و کلید ترکیبی alt + enter رو یاد بدیم که خیلی راحت تر و سریع تر انجام بدن این کار رو.
اولین چیزی که میخوایم بهش بدیم، عکس poulstar هست. نحوه گذاشتن عکس رو میگیم. اول عکس آنلاین رو بگم که راحت تر هست و بهش پهنا و ارتفاع میدیم. بعد از اون
عکس لوکال رو بگم با همون assets و فایل pubspec.yaml رو هم معرفی کنم.
نکته مهم: بعد از تغییر فایل pubspec.yaml و گرفتن dependencies و ساخت پوشه assets، با ctrl+s دیگه جواب نمیده و حتما یه بار باید قطع کنیم. و مجددا برنامه
رو اجرا کنیم. شاید به خاطر pubspec نباشه. اما اینجا حتما این کار لازم هست.
نکته مهم تر بعدی، این هست که بعضی از عکس ها رو خود شبیه ساز اون لحظه نمیشناسه یا به خاطر تحریم هست یا به خاطر باگ یا هر دلیلی بعضی اوقات عکس رو اصلا هیچ
رقمه نمیشناسه. پسوندش رو دستی عوض کردم. اسم فایل رو عوض کردم. به گیت اضافه کردم. با سایت آنلاین فایل png رو دوباره به png تبدیل کردم که مطمئن شم png هست.
ازش با snipping tool عکس گرفتم ذخیره کردم. هیچ کودوم جواب نداد. بار ها سر کلاس هم به همین مشکل خورده بودیم. بذارم برای بعد ببینم درست میشه. فعلا همون عکس
آنلاین رو گذاشتم. بعدا عکس لوکال رو میذارم و آنلاین رو کامنت میکنم.

خب حالا عکسی که گذاشتیم گرد نیست و دورش قشنگ نیست. میخوایم گردش کنیم. عکس رو داخل ویجت ClipRRect میذاریم. (فقط برای عکس نیست و کلا ویجت ها رو میشه گرد
کرد با این ویجت.) وقتی داخل ClipRRect گذاشتیمش، یه ویژگی به اسم borderRadius میشه بهش داد که به عنوان ورودی یه BorderRadius نیاز داره. حالت ساده میشه
بهش BorderRadius.circular داد که این تابع ورودی یه عدد دابل میخواد. اما میشه از تابع های دیگه هم استفاده کرد که اونا ورودی خودشون یه BorderRadius میخوان
نه یه عدد دابل حالا اونجا میشه دوباره فقط یک طرفشون رو یه دونه BorderRadius.circular داد که عدد دابل بشه به ورودیش داد. عددی که تو کد گذاشتم از نصف پهنایی
که به عکس دادم کمتر هست که کاملا دایره ای نشه. سر کلاس یه عدد بزرگتر از نصف هم بدم که نشون بدم کاملا دایره ای میشه. دقیقا نصف اون هم بدیم دایره ای میشه.
کمتر باشه گوشه هاش دایره ای میشه.
کل این row رو داخل یه پدینگ میذاریم. خب حالا برای نوشته های وسط دوباره یه دونه Column مخوایم. اون رو هم درست میکنیم. برای قشنگی فاصله های بینشون هم میشه
از Padding و SizedBox استفاده کرد. مدل های مختلف هم میشه.
آخر سر هم عکس قلب رو میذاریم. عکس رو که میذاریم به ته نمیرسه. اینجا ویجت Expanded رو هم معرفی میکنیم و برای ستون وسط مثلا میذاریمش که قلب بره ته و
عکس هم که سمت چپ هست. حالا اگه بخوایم قلب رو بیاریم سمت چپ تر میشه از پدینگ براش استفاده کرد یا اون رو هم داخل Expanded بذاریم و برای هر کودومشون از
ویژگی flex استفاده کنیم که این خفن تره بود و تو کدها من این کار رو کردم. flex ستون وسط رو ۳ دادم و flex قلب رو ۱ دادم که اون ستون ۳ برابر قلب باشه.

مرحله بعد از این، تغییر تم برنامه هست. اولین چیزی که میخوایم عوض کنیم، فونت هست. اول توی pubspec.yaml فونت های گوگل رو اضافه میکنیم که حدود ۱۰۰۰ تا
فونت رو رایگان بهمون میده. بعد میتونیم ازش تو برنامه مون استفاده کنیم. (نکته مهم: اینجا هم هر بار که فونت رو عوض میکردم خیلی طول میداد تا هات ریلود
رو انجام بده. باز هم به خاطر فونت هست که باعث کندی میشه. زیاد با فونت ور نریم بهتره و وقت کلاس کمتر گرفته میشه. یه فونت رو فقط بذاریم برای تست که ببینن
چه طور میشه این کار رو انجام داد. اما تغییرش ندیم زیاد چون سنگین هست.
برای این که هر بار به هر چی نگیم چه طور باشه، میریم توی ویجت MaterialApp به اتریبیوت theme که ThemeData میگیره، میتونیم textTheme رو بدیم که
همه جا اعمال بشه. حالت ساده اش روی کل صفحه اعمال میشه. اما میتونیم به کانستراکتورش یه دونه کلاس TextTheme بدیم که داخلش بگیم هر بخش چه طور باشه.
مثلا به طور پیش فرض هر تکستی که بهش هیچ استایلی ندیم به صورت پیش فرض از جنس bodyMedium هست. حالا ما اون رو عوض میکنیم و برای بقیه هم هر تنظیماتی
میخوایم میتونیم انجام بدیم که کل تم برنامه راحت تر عوض بشه. در مورد رنگشون هم هست و ... که بعضی ها رو تو کد نوشتم.
حالا اگه بخوایم تم دارک به برنامه اضافه کنیم، میتونیم خودمون همه چیزش رو تعریف کنیم. اما یه ویژگی آماده هم داره به اسم brightness که اونو میتونیم
بذاریم Brightness.dark که خودش تم دارک آماده خودش رو بذاره. خب حالا رنگ بک گراوند اسکافلد رو هم میتونیم عوض کنیم اونجا و تغییرات دیگه که اینجا دیگه توضیح
نمیدم و همه توی کد تو همین بخش مربوطه نوشته میشه. اگه نکته ای داره جهت یادآوری اینجا مینویسیم.

خب برای این که به یه Text جداگانه همون جا استایل بدیم، از ویژگی style استفاده میکنیم و برای دسترسی به تم های صفحه، از Theme.of(context) استفاده میکنیم.
با این به کل اطلاعات کانتکست دسترسی داریم که الان چون با تکست ها کار داریم، از توش اون رو درمیاریم. یعنی مینویسیم Theme.of(context).textTheme. و بعد از
نقطه آخر مثلا میگیم بادی لارج میخوایم. یا تایتل مدیوم میخوایم و ...
در مورد آیکون لوکیشن هم یه کامنت گذاشتم که رنگ آیکون رو هم مثلا میخوایم شبیه به نوشته های کنارش بکنیم. از توی اون تکست، رنگش رو میگیم انتخاب کنه و برای
آیکون هم بذاره. بهمون ارور میده. چون ممکنه اون رنگ وجود نداشته باشه. میتونیم از اپراتور ! اینجا استفاده کنیم و بهش بگیم که مطمئن هستیم چنین چیزی وجود
داره و اگه نداشت بعدا تو برنامه ارور بگیریم. هدف معرفی ! هست. اما کامنتش کردم و از قبلی استفاده کردم برای رنگ آیکون لوکیشن.

در مورد ساخت قسمت زبان های برنامه نویسی چیزهای جدید ایناست.
tyle: Theme.of(context).textTheme.bodyMedium!.copyWith(fontWeight: FontWeight.w700,),),
اینجا از copyWith استفاده کردیم که همون تم رو کپی میکنه. اما میتونیم داخلش بعضی چیزها رو تغییر بدیم. مثلا fontWeight رو تغییر دادیم.
اما بهمون ارور میده میگه که شاید null باشه. که باز با ! میگیم خیالت جمع. تضمین میکنیم که null نیست. اگر هم تضمین ما الکی بود که بعدا ارور میده بهمون.
برای گذاشتن زبان های برنامه نویسی، نه از Row استفاده میکنیم نه از Column. ویجت جدید Wrap رو معرفی میکنیم که دقیقا همون Flex توی Css هست.
داخل اون از Container استفاده میکنیم که شبیه SizedBox هست. با این فرق که میشه کلی کار رو Container ها انجام داد و قشنگشون کرد.
margin و padding و ... میشه بهش داد. color هم میشه بهش داد. اما یه ویژگی به اسم decoration میگیره Container که از جنس BoxDecoration هست.
داخل اون هم دوباره میتونیم رنگ بدیم به Container. اما اگه اونجا دادیم باید ویژگی color خود Container رو برداریم. نکته مهمیه.
در مورد ویجت Wrap، اسپیسینگ میشه فاصله بین عناصری که تو محور اصلی اش میذاره. (اونی که ما تعیین کردیم.) و ران اسپیسینگ میشه فاصله بین آیتم هایی که
تو محور متقاطعش میذاره. در ضمن اگه به ویجت Wrap دایرکشن ندیم، مثل فلکس به صورت پش فرض افقی میچینه و جا که کم بیاد میره ردیف بعد.
بعد از این که یه زبان برنامه نویسی رو ساختیم، به جای کپی پیست کردن ازش یه کلاس بسازیم و از اون کلاس چند تا نمونه بسازیم. بعد از این که ساختیم،
همشون انگار انتخاب شده هستند و حالا ما میخوایم که فقط رو یکی بشه تپ کرد. پس حالت هر ویجت ممکنه تغییر کنه و اینجا مفهوم StatefulWidget رو بگیم
که برای گذاشتن سایه برای ویجتی که انتخاب شده بهونه خوبی هست که StatefulWidget گفته بشه. برای تبدیلش هم که میشه فقط همون رو تبدیل کرد. اما تو
این پروژه که یه صفحه است و خیلی سنگین نیست، کل MyHomePage رو Stateful کردم.
ویجت InkWell به خاطر ریپل افکتش استفاده شده. وگرنه همون ویجت GestureDetector خیلی کامل تر هست و برای تشخیص حرکت دقیق بهتره. اما اون حالت
قشنگی که InkWell داشت رو توش ندیدم و از InkWell استفاده کردم.
تابع onTap رو براشون میذاریم که وقتی روشون کلیک کردیم استیت رو تغییر بدن و ظاهر برنامه عوض بشه. که تابع setState رو هم همینجا معرفی میکنیم.
SingleChildScrollView رو هم بگیم که اگه جا نشه تو صفحه میشه استفاده کرد و physics: BouncingScrollPhysics() هم برای قشنگی میشه بهش داد.
